/*
 * Copyright (c) 2003, 2007-8 Matteo Frigo
 * Copyright (c) 2003, 2007-8 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
/* Generated by: ../../genfft/gen_notw_c -standalone -fma -reorder-insns -simd -compact -variables 100000 -with-ostride 2 -include fftw-spu.h -n 3 -name X(spu_n2fv_3) */

/*
 * This function contains 6 FP additions, 4 FP multiplications,
 * (or, 3 additions, 1 multiplications, 3 fused multiply/add),
 * 11 stack variables, 2 constants, and 6 memory accesses
 */
#include "fftw-spu.h"

void X(spu_n2fv_3) (const R *ri, const R *ii, R *ro, R *io, stride is, stride os, INT v, INT ivs, INT ovs) {
     DVK(KP500000000, +0.500000000000000000000000000000000000000000000);
     DVK(KP866025403, +0.866025403784438646763723170752936183471402627);
     INT i;
     const R *xi;
     R *xo;
     xi = ri;
     xo = ro;
     for (i = v; i > 0; i = i - VL, xi = xi + (VL * ivs), xo = xo + (VL * ovs), MAKE_VOLATILE_STRIDE(is), MAKE_VOLATILE_STRIDE(os)) {
	  V T1, T4, T6, T2, T3, T5;
	  T1 = LD(&(xi[0]), ivs, &(xi[0]));
	  T2 = LD(&(xi[WS(is, 1)]), ivs, &(xi[WS(is, 1)]));
	  T3 = LD(&(xi[WS(is, 2)]), ivs, &(xi[0]));
	  T4 = VADD(T2, T3);
	  T6 = VMUL(LDK(KP866025403), VSUB(T3, T2));
	  ST(&(xo[0]), VADD(T1, T4), ovs, &(xo[0]));
	  T5 = VFNMS(LDK(KP500000000), T4, T1);
	  ST(&(xo[4]), VFNMSI(T6, T5), ovs, &(xo[0]));
	  ST(&(xo[2]), VFMAI(T6, T5), ovs, &(xo[2]));
     }
}
