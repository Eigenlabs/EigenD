/*
 * Copyright (c) 2003, 2007-8 Matteo Frigo
 * Copyright (c) 2003, 2007-8 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
/* Generated by: ../../genfft/gen_notw_c -standalone -fma -reorder-insns -simd -compact -variables 100000 -with-ostride 2 -include fftw-spu.h -store-multiple 2 -n 32 -name X(spu_n2fv_32) */

/*
 * This function contains 186 FP additions, 98 FP multiplications,
 * (or, 88 additions, 0 multiplications, 98 fused multiply/add),
 * 228 stack variables, 7 constants, and 80 memory accesses
 */
#include "fftw-spu.h"

void X(spu_n2fv_32) (const R *ri, const R *ii, R *ro, R *io, stride is, stride os, INT v, INT ivs, INT ovs) {
     DVK(KP980785280, +0.980785280403230449126182236134239036973933731);
     DVK(KP198912367, +0.198912367379658006911597622644676228597850501);
     DVK(KP831469612, +0.831469612302545237078788377617905756738560812);
     DVK(KP668178637, +0.668178637919298919997757686523080761552472251);
     DVK(KP923879532, +0.923879532511286756128183189396788286822416626);
     DVK(KP414213562, +0.414213562373095048801688724209698078569671875);
     DVK(KP707106781, +0.707106781186547524400844362104849039284835938);
     INT i;
     const R *xi;
     R *xo;
     xi = ri;
     xo = ro;
     for (i = v; i > 0; i = i - VL, xi = xi + (VL * ivs), xo = xo + (VL * ovs), MAKE_VOLATILE_STRIDE(is), MAKE_VOLATILE_STRIDE(os)) {
	  V T2x, T1T, T1W, T2K, T16, T1A, T1p, Tb, TT, T1v, T1w, TY, T2t, T2b, T2H;
	  V T2N, T1s, TC, TH, T1t, T24, T2s, T2O, T2E, T2g, T2j, T1B, Tq, T1q, T19;
	  V T2L, T2A, T1R, T3, T1S, T14, T1U, T6, T1V, T9, T1, T2, T12, T13, T4;
	  V T5, T7, T8, Ta, T15, T25, TL, T26, TW, T28, TO, T29, TR, TJ, TK;
	  V TU, TV, TM, TN, TP, TQ, TX, TS, T2F, T2G, T27, T2a, Tu, T1Y, TF;
	  V T1Z, Tx, T21, TA, T22, Ts, Tt, TD, TE, Tv, Tw, Ty, Tz, TG, TB;
	  V T2C, T2D, T20, T23, T2h, Te, T2f, To, T2i, Th, T2e, Tl, Tc, Td, Tm;
	  V Tn, Tf, Tg, Tj, Tk, T2z, T2y, T17, T18, Ti, Tp, T31, T32, T33, T34;
	  V T35, T36, T37, T38, T2B, T2P, T2M, T2I, T39, T3a, T3b, T3c, T2p, T2q, T2n;
	  V T2d, T2o, T2m, T2l, T1X, T2c, T2k, T2v, T2r, T2w, T2u, T2Z, T2V, T30, T2Y;
	  V T2T, T2U, T2W, T2X, T3d, T3e, T3f, T3g, T2R, T2J, T2S, T2Q, T1J, T1r, T1C;
	  V T1M, T1K, T1F, T1N, T1y, T1u, T1x, T1D, T1E, T1H, T1I, T1L, T1O, T1z, T1G;
	  V T3h, T3i, T1P, T1Q, T3j, T3k, T3l, T3m, T3n, T3o, T1h, Tr, T1a, T1k, T1i;
	  V T1d, T1l, T10, TI, TZ, T1b, T1c, T1f, T1g, T1j, T1m, T11, T1e, T3p, T3q;
	  V T1n, T1o, T3r, T3s, T3t, T3u, T3v, T3w;
	  T1 = LD(&(xi[0]), ivs, &(xi[0]));
	  T2 = LD(&(xi[WS(is, 16)]), ivs, &(xi[0]));
	  T1R = VADD(T1, T2);
	  T3 = VSUB(T1, T2);
	  T12 = LD(&(xi[WS(is, 8)]), ivs, &(xi[0]));
	  T13 = LD(&(xi[WS(is, 24)]), ivs, &(xi[0]));
	  T1S = VADD(T12, T13);
	  T14 = VSUB(T12, T13);
	  T4 = LD(&(xi[WS(is, 4)]), ivs, &(xi[0]));
	  T5 = LD(&(xi[WS(is, 20)]), ivs, &(xi[0]));
	  T1U = VADD(T4, T5);
	  T6 = VSUB(T4, T5);
	  T7 = LD(&(xi[WS(is, 28)]), ivs, &(xi[0]));
	  T8 = LD(&(xi[WS(is, 12)]), ivs, &(xi[0]));
	  T1V = VADD(T7, T8);
	  T9 = VSUB(T7, T8);
	  T2x = VSUB(T1R, T1S);
	  T1T = VADD(T1R, T1S);
	  T1W = VADD(T1U, T1V);
	  T2K = VSUB(T1V, T1U);
	  Ta = VADD(T6, T9);
	  T15 = VSUB(T9, T6);
	  T16 = VFNMS(LDK(KP707106781), T15, T14);
	  T1A = VFMA(LDK(KP707106781), T15, T14);
	  T1p = VFNMS(LDK(KP707106781), Ta, T3);
	  Tb = VFMA(LDK(KP707106781), Ta, T3);
	  TJ = LD(&(xi[WS(is, 31)]), ivs, &(xi[WS(is, 1)]));
	  TK = LD(&(xi[WS(is, 15)]), ivs, &(xi[WS(is, 1)]));
	  T25 = VADD(TJ, TK);
	  TL = VSUB(TJ, TK);
	  TU = LD(&(xi[WS(is, 23)]), ivs, &(xi[WS(is, 1)]));
	  TV = LD(&(xi[WS(is, 7)]), ivs, &(xi[WS(is, 1)]));
	  T26 = VADD(TV, TU);
	  TW = VSUB(TU, TV);
	  TM = LD(&(xi[WS(is, 3)]), ivs, &(xi[WS(is, 1)]));
	  TN = LD(&(xi[WS(is, 19)]), ivs, &(xi[WS(is, 1)]));
	  T28 = VADD(TM, TN);
	  TO = VSUB(TM, TN);
	  TP = LD(&(xi[WS(is, 27)]), ivs, &(xi[WS(is, 1)]));
	  TQ = LD(&(xi[WS(is, 11)]), ivs, &(xi[WS(is, 1)]));
	  T29 = VADD(TP, TQ);
	  TR = VSUB(TP, TQ);
	  TX = VSUB(TR, TO);
	  TS = VADD(TO, TR);
	  TT = VFMA(LDK(KP707106781), TS, TL);
	  T1v = VFNMS(LDK(KP707106781), TS, TL);
	  T1w = VFNMS(LDK(KP707106781), TX, TW);
	  TY = VFMA(LDK(KP707106781), TX, TW);
	  T2F = VSUB(T25, T26);
	  T27 = VADD(T25, T26);
	  T2a = VADD(T28, T29);
	  T2G = VSUB(T29, T28);
	  T2t = VADD(T27, T2a);
	  T2b = VSUB(T27, T2a);
	  T2H = VFNMS(LDK(KP414213562), T2G, T2F);
	  T2N = VFMA(LDK(KP414213562), T2F, T2G);
	  Ts = LD(&(xi[WS(is, 1)]), ivs, &(xi[WS(is, 1)]));
	  Tt = LD(&(xi[WS(is, 17)]), ivs, &(xi[WS(is, 1)]));
	  Tu = VSUB(Ts, Tt);
	  T1Y = VADD(Ts, Tt);
	  TD = LD(&(xi[WS(is, 9)]), ivs, &(xi[WS(is, 1)]));
	  TE = LD(&(xi[WS(is, 25)]), ivs, &(xi[WS(is, 1)]));
	  TF = VSUB(TD, TE);
	  T1Z = VADD(TD, TE);
	  Tv = LD(&(xi[WS(is, 5)]), ivs, &(xi[WS(is, 1)]));
	  Tw = LD(&(xi[WS(is, 21)]), ivs, &(xi[WS(is, 1)]));
	  Tx = VSUB(Tv, Tw);
	  T21 = VADD(Tv, Tw);
	  Ty = LD(&(xi[WS(is, 29)]), ivs, &(xi[WS(is, 1)]));
	  Tz = LD(&(xi[WS(is, 13)]), ivs, &(xi[WS(is, 1)]));
	  TA = VSUB(Ty, Tz);
	  T22 = VADD(Ty, Tz);
	  TB = VADD(Tx, TA);
	  TG = VSUB(Tx, TA);
	  T1s = VFNMS(LDK(KP707106781), TB, Tu);
	  TC = VFMA(LDK(KP707106781), TB, Tu);
	  TH = VFMA(LDK(KP707106781), TG, TF);
	  T1t = VFNMS(LDK(KP707106781), TG, TF);
	  T20 = VADD(T1Y, T1Z);
	  T2C = VSUB(T1Y, T1Z);
	  T2D = VSUB(T21, T22);
	  T23 = VADD(T21, T22);
	  T24 = VSUB(T20, T23);
	  T2s = VADD(T20, T23);
	  T2O = VFMA(LDK(KP414213562), T2C, T2D);
	  T2E = VFNMS(LDK(KP414213562), T2D, T2C);
	  Tc = LD(&(xi[WS(is, 2)]), ivs, &(xi[0]));
	  Td = LD(&(xi[WS(is, 18)]), ivs, &(xi[0]));
	  T2h = VADD(Tc, Td);
	  Te = VSUB(Tc, Td);
	  Tm = LD(&(xi[WS(is, 22)]), ivs, &(xi[0]));
	  Tn = LD(&(xi[WS(is, 6)]), ivs, &(xi[0]));
	  T2f = VADD(Tn, Tm);
	  To = VSUB(Tm, Tn);
	  Tf = LD(&(xi[WS(is, 10)]), ivs, &(xi[0]));
	  Tg = LD(&(xi[WS(is, 26)]), ivs, &(xi[0]));
	  T2i = VADD(Tf, Tg);
	  Th = VSUB(Tf, Tg);
	  Tj = LD(&(xi[WS(is, 30)]), ivs, &(xi[0]));
	  Tk = LD(&(xi[WS(is, 14)]), ivs, &(xi[0]));
	  T2e = VADD(Tj, Tk);
	  Tl = VSUB(Tj, Tk);
	  T2z = VSUB(T2e, T2f);
	  T2g = VADD(T2e, T2f);
	  T2j = VADD(T2h, T2i);
	  T2y = VSUB(T2h, T2i);
	  T17 = VFMA(LDK(KP414213562), Te, Th);
	  Ti = VFNMS(LDK(KP414213562), Th, Te);
	  Tp = VFNMS(LDK(KP414213562), To, Tl);
	  T18 = VFMA(LDK(KP414213562), Tl, To);
	  T1B = VSUB(Tp, Ti);
	  Tq = VADD(Ti, Tp);
	  T1q = VADD(T17, T18);
	  T19 = VSUB(T17, T18);
	  T2L = VSUB(T2z, T2y);
	  T2A = VADD(T2y, T2z);
	  T2p = VADD(T1T, T1W);
	  T1X = VSUB(T1T, T1W);
	  T2c = VADD(T24, T2b);
	  T2l = VSUB(T2b, T24);
	  T2n = VFMA(LDK(KP707106781), T2c, T1X);
	  T2d = VFNMS(LDK(KP707106781), T2c, T1X);
	  T2q = VADD(T2j, T2g);
	  T2k = VSUB(T2g, T2j);
	  T2o = VFMA(LDK(KP707106781), T2l, T2k);
	  T2m = VFNMS(LDK(KP707106781), T2l, T2k);
	  T31 = VFNMSI(T2m, T2d);
	  STM2(&(xo[24]), T31, ovs, &(xo[0]));
	  T32 = VFMAI(T2o, T2n);
	  STM2(&(xo[8]), T32, ovs, &(xo[0]));
	  T33 = VFMAI(T2m, T2d);
	  STM2(&(xo[40]), T33, ovs, &(xo[0]));
	  T34 = VFNMSI(T2o, T2n);
	  STM2(&(xo[56]), T34, ovs, &(xo[0]));
	  T2v = VSUB(T2p, T2q);
	  T2r = VADD(T2p, T2q);
	  T2w = VSUB(T2t, T2s);
	  T2u = VADD(T2s, T2t);
	  T35 = VSUB(T2r, T2u);
	  STM2(&(xo[32]), T35, ovs, &(xo[0]));
	  T36 = VFMAI(T2w, T2v);
	  STM2(&(xo[16]), T36, ovs, &(xo[0]));
	  T37 = VADD(T2r, T2u);
	  STM2(&(xo[0]), T37, ovs, &(xo[0]));
	  T38 = VFNMSI(T2w, T2v);
	  STM2(&(xo[48]), T38, ovs, &(xo[0]));
	  T2B = VFMA(LDK(KP707106781), T2A, T2x);
	  T2T = VFNMS(LDK(KP707106781), T2A, T2x);
	  T2U = VADD(T2O, T2N);
	  T2P = VSUB(T2N, T2O);
	  T2Z = VFMA(LDK(KP923879532), T2U, T2T);
	  T2V = VFNMS(LDK(KP923879532), T2U, T2T);
	  T2M = VFMA(LDK(KP707106781), T2L, T2K);
	  T2W = VFNMS(LDK(KP707106781), T2L, T2K);
	  T2X = VSUB(T2H, T2E);
	  T2I = VADD(T2E, T2H);
	  T30 = VFNMS(LDK(KP923879532), T2X, T2W);
	  T2Y = VFMA(LDK(KP923879532), T2X, T2W);
	  T39 = VFMAI(T2Y, T2V);
	  STM2(&(xo[20]), T39, ovs, &(xo[0]));
	  T3a = VFMAI(T30, T2Z);
	  STM2(&(xo[52]), T3a, ovs, &(xo[0]));
	  T3b = VFNMSI(T2Y, T2V);
	  STM2(&(xo[44]), T3b, ovs, &(xo[0]));
	  T3c = VFNMSI(T30, T2Z);
	  STM2(&(xo[12]), T3c, ovs, &(xo[0]));
	  T2R = VFMA(LDK(KP923879532), T2I, T2B);
	  T2J = VFNMS(LDK(KP923879532), T2I, T2B);
	  T2S = VFMA(LDK(KP923879532), T2P, T2M);
	  T2Q = VFNMS(LDK(KP923879532), T2P, T2M);
	  T3d = VFNMSI(T2Q, T2J);
	  STM2(&(xo[28]), T3d, ovs, &(xo[0]));
	  T3e = VFMAI(T2S, T2R);
	  STM2(&(xo[4]), T3e, ovs, &(xo[0]));
	  T3f = VFMAI(T2Q, T2J);
	  STM2(&(xo[36]), T3f, ovs, &(xo[0]));
	  T3g = VFNMSI(T2S, T2R);
	  STM2(&(xo[60]), T3g, ovs, &(xo[0]));
	  T1J = VFNMS(LDK(KP923879532), T1q, T1p);
	  T1r = VFMA(LDK(KP923879532), T1q, T1p);
	  T1C = VFMA(LDK(KP923879532), T1B, T1A);
	  T1M = VFNMS(LDK(KP923879532), T1B, T1A);
	  T1u = VFMA(LDK(KP668178637), T1t, T1s);
	  T1D = VFNMS(LDK(KP668178637), T1s, T1t);
	  T1E = VFNMS(LDK(KP668178637), T1v, T1w);
	  T1x = VFMA(LDK(KP668178637), T1w, T1v);
	  T1K = VADD(T1D, T1E);
	  T1F = VSUB(T1D, T1E);
	  T1N = VSUB(T1x, T1u);
	  T1y = VADD(T1u, T1x);
	  T1H = VFMA(LDK(KP831469612), T1y, T1r);
	  T1z = VFNMS(LDK(KP831469612), T1y, T1r);
	  T1G = VFNMS(LDK(KP831469612), T1F, T1C);
	  T1I = VFMA(LDK(KP831469612), T1F, T1C);
	  T3h = VFNMSI(T1G, T1z);
	  STM2(&(xo[26]), T3h, ovs, &(xo[2]));
	  STN2(&(xo[24]), T31, T3h, ovs);
	  T3i = VFMAI(T1G, T1z);
	  STM2(&(xo[38]), T3i, ovs, &(xo[2]));
	  STN2(&(xo[36]), T3f, T3i, ovs);
	  T1L = VFMA(LDK(KP831469612), T1K, T1J);
	  T1P = VFNMS(LDK(KP831469612), T1K, T1J);
	  T1Q = VFNMS(LDK(KP831469612), T1N, T1M);
	  T1O = VFMA(LDK(KP831469612), T1N, T1M);
	  T3j = VFNMSI(T1Q, T1P);
	  STM2(&(xo[10]), T3j, ovs, &(xo[2]));
	  STN2(&(xo[8]), T32, T3j, ovs);
	  T3k = VFMAI(T1Q, T1P);
	  STM2(&(xo[54]), T3k, ovs, &(xo[2]));
	  STN2(&(xo[52]), T3a, T3k, ovs);
	  T3l = VFNMSI(T1I, T1H);
	  STM2(&(xo[58]), T3l, ovs, &(xo[2]));
	  STN2(&(xo[56]), T34, T3l, ovs);
	  T3m = VFMAI(T1I, T1H);
	  STM2(&(xo[6]), T3m, ovs, &(xo[2]));
	  STN2(&(xo[4]), T3e, T3m, ovs);
	  T3n = VFMAI(T1O, T1L);
	  STM2(&(xo[22]), T3n, ovs, &(xo[2]));
	  STN2(&(xo[20]), T39, T3n, ovs);
	  T3o = VFNMSI(T1O, T1L);
	  STM2(&(xo[42]), T3o, ovs, &(xo[2]));
	  STN2(&(xo[40]), T33, T3o, ovs);
	  T1h = VFNMS(LDK(KP923879532), Tq, Tb);
	  Tr = VFMA(LDK(KP923879532), Tq, Tb);
	  T1a = VFMA(LDK(KP923879532), T19, T16);
	  T1k = VFNMS(LDK(KP923879532), T19, T16);
	  TI = VFNMS(LDK(KP198912367), TH, TC);
	  T1b = VFMA(LDK(KP198912367), TC, TH);
	  T1c = VFMA(LDK(KP198912367), TT, TY);
	  TZ = VFNMS(LDK(KP198912367), TY, TT);
	  T1i = VADD(T1b, T1c);
	  T1d = VSUB(T1b, T1c);
	  T1l = VSUB(TZ, TI);
	  T10 = VADD(TI, TZ);
	  T1f = VFMA(LDK(KP980785280), T10, Tr);
	  T11 = VFNMS(LDK(KP980785280), T10, Tr);
	  T1e = VFNMS(LDK(KP980785280), T1d, T1a);
	  T1g = VFMA(LDK(KP980785280), T1d, T1a);
	  T3p = VFNMSI(T1e, T11);
	  STM2(&(xo[34]), T3p, ovs, &(xo[2]));
	  STN2(&(xo[32]), T35, T3p, ovs);
	  T3q = VFMAI(T1e, T11);
	  STM2(&(xo[30]), T3q, ovs, &(xo[2]));
	  STN2(&(xo[28]), T3d, T3q, ovs);
	  T1j = VFNMS(LDK(KP980785280), T1i, T1h);
	  T1n = VFMA(LDK(KP980785280), T1i, T1h);
	  T1o = VFMA(LDK(KP980785280), T1l, T1k);
	  T1m = VFNMS(LDK(KP980785280), T1l, T1k);
	  T3r = VFMAI(T1o, T1n);
	  STM2(&(xo[14]), T3r, ovs, &(xo[2]));
	  STN2(&(xo[12]), T3c, T3r, ovs);
	  T3s = VFNMSI(T1o, T1n);
	  STM2(&(xo[50]), T3s, ovs, &(xo[2]));
	  STN2(&(xo[48]), T38, T3s, ovs);
	  T3t = VFNMSI(T1g, T1f);
	  STM2(&(xo[2]), T3t, ovs, &(xo[2]));
	  STN2(&(xo[0]), T37, T3t, ovs);
	  T3u = VFMAI(T1g, T1f);
	  STM2(&(xo[62]), T3u, ovs, &(xo[2]));
	  STN2(&(xo[60]), T3g, T3u, ovs);
	  T3v = VFNMSI(T1m, T1j);
	  STM2(&(xo[18]), T3v, ovs, &(xo[2]));
	  STN2(&(xo[16]), T36, T3v, ovs);
	  T3w = VFMAI(T1m, T1j);
	  STM2(&(xo[46]), T3w, ovs, &(xo[2]));
	  STN2(&(xo[44]), T3b, T3w, ovs);
     }
}
