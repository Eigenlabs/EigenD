
<<<
#include "eigend.h"
>>>

from piagent_native[piagent/piagent.pip] import scaffold_gui
from piw[piw/piw.pip] import term
from picross[picross/picross.pip] import f_string

class c2p[eigend::c2p_t]
{
    c2p()
    virtual void set_args(const char *) = 0
    virtual void initialise(p2c *, scaffold_gui *, const stdstr &, const stdstr &) = 0
    virtual term get_setups() = 0
    virtual term get_user_setups() = 0
    virtual stdstr get_setup_slot(const char *) = 0
    virtual void load_setup(const char *,bool) = 0
    virtual void delete_setup(const char *) = 0
    virtual stdstr save_setup(const char *, const char *, const char *, bool) = 0
    virtual stdstr edit_setup(const char *, const char *, const char *, const char *) = 0
    virtual stdstr get_description(const char *) = 0
    virtual stdstr get_logfile() = 0
    virtual stdstr get_email() = 0
    virtual stdstr get_username() = 0
    virtual stdstr get_subject() = 0
    virtual stdstr get_default_setup(bool) = 0
    virtual void set_default_setup(const char *) = 0
    virtual stdstr get_latest_release() = 0
    virtual stdstr notes_to_words(const stdstr &) = 0
    virtual stdstr words_to_notes(const stdstr &) = 0
    virtual void file_bug(const stdstr &, const stdstr &, const stdstr &, const stdstr &) = 0
    virtual void upgrade_setups() = 0
    virtual void prepare_quit() = 0
    virtual void quit() = 0

    inline token(self,args)
    <<<
        return PyCObject_FromVoidPtr(self,0);
    >>>
}

class p2c[eigend::p2c_t]
{
    p2c()
    virtual void load_started(const char *) = 0
    virtual void load_status(const char *, unsigned) = 0
    virtual void load_ended() = 0
    virtual f_string make_logger(const char *) = 0
    virtual void setups_changed(const char *) = 0
    virtual void alert_dialog(const char *, const char *, const char *) = 0
    virtual void info_dialog(const char *, const char *, const char *) = 0
    virtual void set_latest_release(const char *) = 0
}
