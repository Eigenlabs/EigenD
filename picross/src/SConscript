
#
# Copyright 2009 Eigenlabs Ltd.  http://www.eigenlabs.com
#
# This file is part of EigenD.
#
# EigenD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EigenD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EigenD.  If not, see <http://www.gnu.org/licenses/>.
#

Import('env')

pic_files=Split("""
    pic_backtrace.c
    pic_time.c pic_usb_generic.cpp usb_serial.cpp pic_safeq.cpp
    pic_error.cpp pic_log.cpp pic_fastalloc.cpp
    pic_mlock.cpp pic_resources.cpp
    """)

pic_env = env.Clone()
pic_env.PiProgram('isotest','iso_out_test.cpp',libraries=Split('pic'))
pic_env.Append(CCFLAGS='-DPI_RELEASE=\\"$PI_RELEASE\\"')
pic_env.Append(CCFLAGS='-DPI_COMPATIBLE=\\"$PI_COMPATIBLE\\"')
pic_env.Append(CCFLAGS='-DPI_COLLECTION=\\"$PI_COLLECTION\\"')

if env['IS_MACOSX']:
    pic_files=pic_files+Split('pic_thread_posix.cpp pic_cfrunloop.cpp pic_usb_macosx.cpp pic_tool_macosx.cpp pic_power_macosx.mm')
    pic_env.Append(LINKFLAGS='-framework CoreServices -framework CoreFoundation -framework IOKit -framework CoreAudio -framework ApplicationServices -framework Foundation ')
    pic_env.Append(CCFLAGS='-Wno-unknown-pragmas')
    pic_env.PiSharedLibrary('pic',pic_files,package='eigend',public=True,locked=True)

if env['IS_LINUX']:
    pic_files=pic_files+Split('pic_thread_posix.cpp pic_usb_linux.cpp pic_tool_linux.cpp pic_power_linux.cpp')
    pic_env.Append(LIBS=Split('libusb-1.0'))
    pic_env.PiSharedLibrary('pic',pic_files,package='eigend',public=True,locked=True)

if env['IS_WINDOWS']:
    pic_files=pic_files+Split('pic_thread_win32.cpp pic_usb_win32.cpp pic_winloop.cpp pic_tool_win32.cpp pic_power_win32.cpp')
    pic_env.Append(LIBS=Split('shell32'))
    pic_env.PiSharedLibrary('pic',pic_files,libraries=Split('openwindev'),package='eigend',public=True,locked=True)

pic_pip_env = env.Clone()
pic_pip_env.PiPipBinding('picross_native',env.Pipfile('picross.pip'),libraries=Split('pic'),package='eigend')

#pic_test_env = pic_env.Clone()
#pic_test_env.PiPipBinding('pic_test_native','pic_test.pip',libraries=Split('pic'))
